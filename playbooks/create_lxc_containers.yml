# vim:ft=ansible:
---
- hosts: controller*
  become: yes
  become_method: sudo
  vars:
    remote_rsyslog: false
    lxc_base_container: "stackforce_base_container"
    num_controllers:  "{{ groups['controller'] | length }}"
  roles:
    - role: common
  tasks:

  - name: Remove firewalld
    yum: name=firewalld state=absent

  - name: Custom ssh config
    become_user: "{{ lxc_container_user_name }}"
    copy: src="files/dot_ssh/config" dest="~/.ssh/config" mode=600 owner="{{ lxc_container_user_name }}"

  - lvg: vg=lxc pvs="{{ lxc_disk }}"
    tags:
      - lvm

  - name: EPEL repository
    yum: name="{{ item }}" state=present
    with_items:
      - "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
    tags:
      - yum

  - name: Libselinux-python package installation
    yum: name=libselinux-python state=present

  - name: Set selinux state to permissive
    selinux: policy=targeted state=permissive

  - name: LXC packages
    yum: name="{{ item }}" state=present
    with_items:
      - lxc
      - lxc-libs
      - lxc-templates
      - libvirt-daemon-lxc.x86_64
      - libvirt-daemon-config-network.x86_64
      - python2-lxc
    tags:
      - yum

  - name: Remove setfcap from centos.common.conf
    copy:
      src: "files/lxc_centos.common.conf"
      dest: "/usr/share/lxc/config/centos.common.conf"

  - name: Copy LXC default config
    copy:
      src: "files/lxc_default.conf"
      dest: "/etc/lxc/default.conf"

  - name: Restart libvirtd
    service: name=libvirtd state=restarted

  - name: Enable LXC service
    service: name=lxc enabled=yes

  - name: Create a base container
    lxc_container:
      name: "{{ lxc_base_container }}"
      container_log: true
      template: centos
      state: started
      backing_store: lvm
      vg_name: "lxc"
      clone_snapshot: true
      fs_size: "3G"
      container_config:
        - lxc.kmsg=0
        - lxc.start.auto=1
    tags:
      - lxc
      - lxc-base-container

  - name: Waiting for ping
    lxc_container:
      name: "{{ item }}"
      container_command: |
        ping -c 1 8.8.8.8
    register: lvm_container_info
    until: lvm_container_info.lxc_container.ips.0 is defined
    retries: 10
    delay: 30
    with_items: lxc_base_container
    tags:
      - ping

  - name: Install packages
    lxc_container:
      name: "{{ item }}"
      container_command: |
        yum -y update &&
        yum install -y sudo openssh-clients rsync &&
        sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers
        cat <<EOT >> /etc/sysconfig/network-scripts/ifcfg-eth1
        DEVICE=eth1
        BOOTPROTO=dhcp
        ONBOOT=yes
        HOSTNAME=
        NM_CONTROLLED=no
        TYPE=Ethernet
        DHCP_HOSTNAME=\`hostname\`
        EOT
    with_items: lxc_base_container
    tags:
      - yum

  - name: Create user
    lxc_container:
      name: "{{ item }}"
      container_command: |
        useradd --create-home -G wheel -s /bin/bash {{ lxc_container_user_name }}
    with_items: lxc_base_container
    tags:
      - user

  - name: Check key
    stat: path="/home/{{ lxc_container_user_name }}/.ssh/id_rsa.pub"
    register: pub_key
    tags:
      - ssh_key

  - name: Generate ssh key
    shell: "ssh-keygen -q -f /home/{{ lxc_container_user_name }}/.ssh/id_rsa -N ''"
    when: not pub_key.stat.exists
    become_user: "{{ lxc_container_user_name }}"
    tags:
      - ssh_key

  - name: Double check key
    stat: path="/home/{{ lxc_container_user_name }}/.ssh/id_rsa.pub"
    register: pub_key

  - name: Add public rsa key to authorized_keys
    authorized_key: user={{ lxc_container_user_name }} key="{{ lookup('file', '/home/{{ lxc_container_user_name }}/.ssh/id_rsa.pub') }}"

  - name: Force container user authorized_keys
    lxc_container:
      name: "{{ item }}"
      container_command: |
        getent passwd "{{ lxc_container_user_name }}" &&
        mkdir "/home/{{ lxc_container_user_name }}/.ssh" &&
        chmod 700 "/home/{{ lxc_container_user_name }}/.ssh" &&
        echo "{{ lookup('file', '/home/'+lxc_container_user_name+'/.ssh/id_rsa.pub') }}" > "/home/{{ lxc_container_user_name }}/.ssh/authorized_keys" &&
        chmod 600 "/home/{{ lxc_container_user_name }}/.ssh/authorized_keys" &&
        chown -R "{{ lxc_container_user_name }}":"{{ lxc_container_user_name }}" "/home/{{ lxc_container_user_name }}/.ssh"
    no_log: True
    when: pub_key.stat.exists
    with_items: lxc_base_container
    tags:
      - ssh_key

  - name: Tune resolv conf
    lxc_container:
      name: "{{ item }}"
      container_command: |
        cat <<EOT >> /etc/resolv.conf
        nameserver 192.168.53.254
        nameserver 192.168.122.1
        EOT
    with_items: lxc_base_container
    when: num_controllers | int > 1

  - name: Clone containers
    lxc_container:
      name: "{{ lxc_base_container }}"
      backing_store: lvm
      clone_name: "{{ item }}"
      clone_snapshot: true
      fs_size: "3G"
    with_items: "{{ lxc_containers }}"
    tags:
      - lxc
      - lxc-clone-containers

  - name: Enable routing in sysctl.conf
    sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes

  - name: Waiting for ping
    lxc_container:
      name: "{{ item }}"
      container_command: |
        ping -c 1 8.8.8.8
    register: lvm_container_info
    until: lvm_container_info.lxc_container.ips.0 is defined
    retries: 10
    delay: 30
    with_items: "{{ lxc_containers }}"
    tags:
      - ping

  - name: Stop Base conainer
    lxc_container:
      name: "{{ lxc_base_container }}"
      state: stopped

  - name: Make the base container non-autostarted
    lineinfile: dest=/var/lib/lxc/{{ lxc_base_container }}/config line="lxc.start.auto = 1" state=absent
